417. Pacific Atlantic Water Flow


C++ Code
----------------------------------
class Solution {
public:
    vector<int> cr={0,0,1,-1};
    vector<int> cc={1,-1,0,0};
    bool check(int x, int y, int m, int n)
    {
        if(x<0||y<0|x>=m||y>=n)
            return 0;
        return 1;
    }
    void dfs(vector<vector<int>>& heights, int i, int j, int num, vector<vector<int>>*visited)
    {
        (*visited)[i][j]=1;
        int k, m=heights.size(),n=heights[0].size(),x,y;
        for(k=0;k<4;k++)
        {
            x = i+cr[k];
            y = j+cc[k];
            
            if(check(x,y,m,n) && heights[x][y]>=num && !(*visited)[x][y])
            {
                dfs(heights,x,y,heights[x][y],visited);
            }
        }
        return;
    }
    vector<vector<int>> pacificAtlantic(vector<vector<int>>& heights) 
    {
        vector<vector<int>> res;
        int m=heights.size(),n=heights[0].size(),i,j;
        vector<vector<int>> visitedPac(m,vector<int>(n,0));
        vector<vector<int>> visitedAtl(m,vector<int>(n,0));
        
        for(i=0;i<m;i++)
        {
            if(!visitedPac[i][0])
            {

                dfs(heights,i,0,heights[i][0],&visitedPac);
            }
            if(!visitedAtl[i][n-1])
            {
                dfs(heights,i,n-1,heights[i][n-1],&visitedAtl);
            }

        }

        for(j=0;j<n;j++)
        {
            if(!visitedPac[0][j])
            {
                dfs(heights,0,j,heights[0][j],&visitedPac);
            }
            if(!visitedAtl[m-1][j])
            {
                dfs(heights,m-1,j,heights[m-1][j],&visitedAtl);
            } 
        }


        for(i=0;i<m;i++)
        {
            for(j=0;j<n;j++)
            {
                
                if(visitedPac[i][j] && visitedAtl[i][j])
                    res.push_back({i,j});
            }
        }
        return res;
    }
};
