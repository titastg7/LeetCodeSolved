994. Rotting Oranges


C++ Code
----------------------------------

class Solution {
public:
    vector<int> cr={0,0,1,-1};
    vector<int> cc= {1,-1,0,0};
    typedef pair<int,int> ii;
    bool check(int row, int col, int i, int j)
    {
        if(i<0||j<0||i>=row||j>=col)
            return 0;
        return 1;
    }
    
    int orangesRotting(vector<vector<int>>& grid) 
    {
        int i,j,m=grid.size(),n=grid[0].size(), x,y,k,res=-1,size;
        queue<ii> time;
        
        for(i=0;i<m;i++)
        {
            for(j=0;j<n;j++)
            {
                if(grid[i][j]==2)
                    time.push({i,j});
            }
        }
        
        while(!time.empty())
        {
            size=time.size();
            while(size--)
            {
                ii top = time.front();
                time.pop();             
                
                for(k=0;k<4;k++)
                {
                    x = top.first+cr[k];
                    y = top.second+cc[k];
                    if(check(m,n,x,y) && grid[x][y]==1)
                    {
                        grid[x][y]=2;
                        time.push({x,y});
                    }
                }
            }
            res++;
        }
        
        for(i=0;i<m;i++)
        {
            for(j=0;j<n;j++)
            {
                if(grid[i][j]==1)
                    return -1;
            }
        }
        return res==-1?0:res;
    }
};
