
124. Binary Tree Maximum Path Sum


C++ Code
----------------------------------



/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int find(TreeNode* root, int &maxVal)
    {
        if(root==NULL)
            return 0;
        int t1 =find(root->left,maxVal);
        int t2 =find(root->right,maxVal);

        int ans = max(root->val, root->val+max(t1,t2));
        maxVal = max(maxVal,max(ans, (t1+t2+root->val)));
        return ans;
        
    }
    int maxPathSum(TreeNode* root) {
        if(root==NULL)
            return 0;
        int maxVal=INT_MIN;
        find(root,maxVal);
        return maxVal;
    }
};
