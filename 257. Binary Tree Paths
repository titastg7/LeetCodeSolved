257. Binary Tree Paths


C++ Code
----------------------------------

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void find(TreeNode* root, string path, vector<string>*res)
    {
        path +=to_string(root->val);
        if(root->left==NULL && root->right==NULL)
        {
            res->push_back(path);
            return;
        }
        path +="->";
        if(root->left!=NULL)
            find(root->left,path,res);
        if(root->right!=NULL)
            find(root->right,path,res);
        path.pop_back();
        path.pop_back();
        return ;
    }
    vector<string> binaryTreePaths(TreeNode* root) {
        vector<string> res;
        if(root==NULL)
            return res;
        string path;
        find(root,path, &res);
        return res;
    }
};

