64. Minimum Path Sum


C++ Code
----------------------------------

class Solution {
public:
    int find(vector<vector<int>> & grid, int m, int n, vector<vector<int>>*memo)
    {
        if(m==0 && n==0)
            return grid[m][n];
        if(m<0||n<0)
            return INT_MAX/6;
        if((*memo)[m][n]!=-1)
            return (*memo)[m][n];
        (*memo)[m][n] = grid[m][n]+min(find(grid,m-1,n,memo), find(grid,m,n-1,memo));
        return (*memo)[m][n];
    }
    int minPathSum(vector<vector<int>>& grid) 
    {
        int m=grid.size(),n=grid[0].size();
        vector<vector<int>> memo(m,vector<int>(n,-1));
        return find(grid,m-1,n-1,&memo);
    }
};
