199. Binary Tree Right Side View


C++ Code
----------------------------------

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> rightSideView(TreeNode* root) 
    {
        vector<int> res;
        if(root==NULL)
            return res;
        queue<TreeNode*> level;
        int size=0;
        level.push(root);
        TreeNode* temp;
        while(!level.empty())
        {
            size=level.size();
            while(size--)
            {
                temp = level.front();
                level.pop();
                if(size==0)
                    res.push_back(temp->val);
                if(temp->left)
                    level.push(temp->left);
                if(temp->right)
                    level.push(temp->right);
            }
        }
        return res;
    }
};
