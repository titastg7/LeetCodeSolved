116. Populating Next Right Pointers in Each Node


C++ Code
----------------------------------

/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* left;
    Node* right;
    Node* next;

    Node() : val(0), left(NULL), right(NULL), next(NULL) {}

    Node(int _val) : val(_val), left(NULL), right(NULL), next(NULL) {}

    Node(int _val, Node* _left, Node* _right, Node* _next)
        : val(_val), left(_left), right(_right), next(_next) {}
};
*/

class Solution {
public:
    Node* connect(Node* root) 
    {
        if(root==NULL)
            return root;
        queue<Node*> level;
        int size=0;
        level.push(root);
        
        while(!level.empty())
        {
            size= level.size();
            while(size--)
            {
                Node *top = level.front();
                level.pop();
                if(size>0)
                    top->next = level.front();
                if(top->left)
                    level.push(top->left);
                if(top->right)
                    level.push(top->right);
            }
        }
        return root;
    }
};
