295. Find Median from Data Stream


C++ Code
----------------------------------

class MedianFinder {
public:
    priority_queue<double> maxHeap;
    priority_queue<double, vector<double>, greater<double>> minHeap; 
    MedianFinder() 
    {

    }
    
    void addNum(int num) 
    {
        int maxHeapSize=maxHeap.size(), minHeapSize = minHeap.size();
        if(maxHeapSize == minHeapSize)
        {
            if(minHeapSize > 0 && num > minHeap.top())
            {
                maxHeap.push(minHeap.top());
                minHeap.pop();
                minHeap.push(num);
            }
            else
                maxHeap.push(num);
        }
        else
        {
            if(maxHeapSize > 0 && num < maxHeap.top())
            {
                minHeap.push(maxHeap.top());
                maxHeap.pop();
                maxHeap.push(num);
            }
            else
                minHeap.push(num);
        }
    }
    
    double findMedian() 
    {
        double median;
        int maxHeapSize=maxHeap.size(), minHeapSize = minHeap.size();
        if(maxHeapSize > minHeapSize)
            return maxHeap.top();
        else if(maxHeapSize < minHeapSize)
            return minHeap.top();
        else
            return (maxHeap.top()+minHeap.top())/2;
    }
};

/**
 * Your MedianFinder object will be instantiated and called as such:
 * MedianFinder* obj = new MedianFinder();
 * obj->addNum(num);
 * double param_2 = obj->findMedian();
 */
