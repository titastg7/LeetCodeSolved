854. K-Similar Strings


C++ Code
----------------------------------

class Solution {
public:
    int kSimilarity(string s1, string s2) 
    {
        int res=0,i,j,n=s1.length(),size;
        if(s1==s2)
            return 0;
        unordered_set<string> visited;
        queue<string> level;
        level.push(s1);
        
        visited.insert(s1);
        while(!level.empty())
        {
            size=level.size();
            while(size--)
            {
                string topE = level.front();
                level.pop();
            
                for(i=0;i<n;i++)
                {
                    if(topE[i]!=s2[i])
                        break;
                }

                for(j=i+1;j<n;j++)
                {
                    if(topE[j]==s2[i] && topE[j]!=topE[i])
                    {
                        swap(topE[i],topE[j]);
                        if(topE==s2)
                            return res+1;
                        if(visited.find(topE)==visited.end())
                        {
                            level.push(topE);
                            visited.insert(topE);
                        }
                        swap(topE[i],topE[j]);
                    }
                     
                }
            }
            res++;
        }
        return res;
    }
};
