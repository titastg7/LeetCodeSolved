23. Merge k Sorted Lists
C++ Code
----------------------------------

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    
    ListNode* merge(ListNode* l1, ListNode* l2)
    {
        if(l1==NULL)
            return l2;
        if(l2==NULL)
            return l1;
        if(l1->val<l2->val)
        {
            l1->next=merge(l1->next,l2);
            return l1;
        }
        l2->next = merge(l1,l2->next);
        return l2;
    }
    ListNode* mergeKLists(vector<ListNode*>& lists) {
        int i,n=lists.size();
        if(n==0)
            return NULL;
        for(i=1;i<n ;i++)
            lists[0] = merge(lists[0],lists[i]);
        return lists[0];
    }
};
