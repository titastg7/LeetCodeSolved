304. Range Sum Query 2D - Immutable


C++ Code
----------------------------------

class NumMatrix {
public:
    vector<vector<int>> prefixSum;
    NumMatrix(vector<vector<int>>& matrix) 
    {
        int row=matrix.size(), col=matrix[0].size(),i,j;
        prefixSum = matrix;
        for(i=0;i<row;i++)
        {
            for(j=0;j<col;j++)
            {
                if(i>0)
                    prefixSum[i][j] += prefixSum[i-1][j];
                if(j>0)
                    prefixSum[i][j] += prefixSum[i][j-1];
                if(i>0 && j>0)
                    prefixSum[i][j] -=prefixSum[i-1][j-1];
            }
        }
    }
    
    int sumRegion(int row1, int col1, int row2, int col2) 
    {
        int res = prefixSum[row2][col2];
        if(row1>0)
            res -=prefixSum[row1-1][col2];
        if(col1>0)
            res -=prefixSum[row2][col1-1];
        if(row1>0 && col1>0)
            res += prefixSum[row1-1][col1-1];
        return res;
    }
};

/**
 * Your NumMatrix object will be instantiated and called as such:
 * NumMatrix* obj = new NumMatrix(matrix);
 * int param_1 = obj->sumRegion(row1,col1,row2,col2);
 */
