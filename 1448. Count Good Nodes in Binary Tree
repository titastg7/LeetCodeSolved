1448. Count Good Nodes in Binary Tree


C++ Code
----------------------------------

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void find(TreeNode* root, stack<int>*maxNode, int &res)
    {
        if(root==NULL)
            return;
        if(maxNode->empty() || root->val>= maxNode->top())
        {
            res++;
            maxNode->push(root->val);
        }
        else
        {
            maxNode->push(maxNode->top());
        }
        find(root->left,maxNode,res);
        find(root->right,maxNode,res);
        maxNode->pop();
        return;
    }
    
    int goodNodes(TreeNode* root) 
    {
        int res=0;
        stack<int> maxNode;
        find(root, &maxNode, res);
        return res;
    }
};
