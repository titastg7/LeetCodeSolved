421. Maximum XOR of Two Numbers in an Array


C++ Code
----------------------------------

class Trie
{
    public : 
            Trie *left, *right;
            Trie() 
            { 
                this->left = this->right = NULL; 
            }
            void insert(int value)
            {
                Trie* head = this;
                int i;
                for(i=31;i>=0;i--)
                {
                    int bit = (value >> i) & 1;
                    if(bit == 0)
                    {
                        if(head->left == NULL)
                            head->left = new Trie();
                        head = head->left;
                    }
                    else
                    {
                        if(head->right == NULL)
                            head->right = new Trie();
                        head = head->right;
                    }
                }
            }
            int getMaxXor(int value)
            {
                Trie* head = this;
                int i,res=0;
                for(i=31;i>=0;i--)
                {
                    int bit = (value >> i) & 1;
                    if(bit == 0)
                    {
                        if(head->right!=NULL)
                        {
                            head = head->right;
                            res += (1<<i);
                        }
                        else
                            head = head->left;
                    }
                    else
                    {
                        if(head->left!=NULL)
                        {
                            head = head->left;
                            res += (1<<i);
                        }
                        else
                            head = head->right;
                    }
                }
                return res;
            }
};

class Solution {
public:
    int findMaximumXOR(vector<int>& nums) 
    {
        int i,n =nums.size(),res=0;
        Trie* root = new Trie();
        root->insert(nums[0]);
        
        for(i=1;i<n;i++)
        {
            res = max(res, root->getMaxXor(nums[i]));
            root->insert(nums[i]);
        }
        return res;
    }
};
