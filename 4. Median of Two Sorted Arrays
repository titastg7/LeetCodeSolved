4. Median of Two Sorted Arrays


C++ Code
----------------------------------

class Solution {
public:
    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {
        int l1=nums1.size(),l2=nums2.size();
        if(l1>l2)
            return findMedianSortedArrays(nums2, nums1);
        int low=0, high=l1, midInd =(l1+l2+1)/2,mid,leftAsize, leftBsize, leftA, leftB, rightA, rightB;
        
        while(low<=high)
        {
            mid =(low+high)/2;
            leftAsize = mid;
            leftBsize= midInd-mid;
            leftA = leftAsize> 0? nums1[leftAsize-1]:INT_MIN;
            leftB = leftBsize >0? nums2[leftBsize-1]:INT_MIN;
            rightA = leftAsize <l1? nums1[leftAsize]:INT_MAX;
            rightB = leftBsize <l2 ? nums2[leftBsize]:INT_MAX;
            
            if(leftA<=rightB && leftB<= rightA)
            {
                if((l1+l2)%2==0)
                    return (max(leftA,leftB)+min(rightA,rightB))/2.0;
                return max(leftA, leftB);
            }
            else if(leftA>rightB)
                high = mid-1;
            else
                low = mid+1;
        }
        return 0.0;
    }
};
