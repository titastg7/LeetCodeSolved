540. Single Element in a Sorted Array


C++ Code
----------------------------------

class Solution {
public:
    int singleNonDuplicate(vector<int>& nums) 
    {
        int n=nums.size(),low=0, high=nums.size()-1,mid;
        if(n==1)
            return nums[0];
        if(nums[0]!=nums[1])
            return nums[0];
        
        while(low<=high)
        {
            mid = low+(high-low)/2;
            if(nums[mid]!=nums[mid-1] && nums[mid]!=nums[mid+1])
                return nums[mid];
            if(mid%2==0)
            {
                if(nums[mid]!=nums[mid+1])
                    high=mid-1;
                else
                    low=mid+1;
            }
            else
            {
                if(nums[mid]!=nums[mid-1])
                    high=mid-1;
                else
                    low=mid+1;
            }
        }
        return nums[mid];
    }
};
