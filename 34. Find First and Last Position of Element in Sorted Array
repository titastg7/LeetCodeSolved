34. Find First and Last Position of Element in Sorted Array
C++ Code
----------------------------------

class Solution {
public:
    
    int findLeft(vector<int>&nums, int target)
    {
        int n=nums.size(),low=0, high=n-1,mid,res=-1;
        while(low<=high)
        {
            mid = low+(high-low)/2;
            if(nums[mid]==target)
            {
                res=mid;
                high=mid-1;
            }
            else if(nums[mid]<target)
                low=mid+1;
            else
                high=mid-1;
        }
        return res;
    }
    
    int findRight(vector<int>&nums, int target)
    {
        int n=nums.size(),low=0, high=n-1,mid,res=-1;
        while(low<=high)
        {
            mid = low+(high-low)/2;
            if(nums[mid]==target)
            {
                res=mid;
                low=mid+1;
            }
            else if(nums[mid]<target)
                low=mid+1;
            else
                high=mid-1;
        }
        return res;
    }
    
    vector<int> searchRange(vector<int>& nums, int target) {
        vector<int>res(2,-1);

        res[0] = findLeft(nums,target);
        res[1] = findRight(nums,target);
        return res;
    }
};
