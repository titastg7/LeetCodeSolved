63. Unique Paths II


C++ Code
----------------------------------

class Solution {
public:
    int paths(vector<vector<int>> mat, int i, int j, vector<vector<int>>*memo)
    {
        if(i<0|| j<0 || mat[i][j]==1)
            return 0;
        if(i==0 && j==0)
            return 1;
        if((*memo)[i][j]!=-1)
            return (*memo)[i][j];
        (*memo)[i][j] = paths(mat,i-1,j,memo)+paths(mat,i,j-1,memo);
        return (*memo)[i][j];
        
    }
    int uniquePathsWithObstacles(vector<vector<int>>& obstacleGrid) {
        int m=obstacleGrid.size(), n=obstacleGrid[0].size();
        vector<vector<int>> memo(m,vector<int>(n,-1));
        if(obstacleGrid[0][0]|| obstacleGrid[m-1][n-1])
            return 0;
        return paths(obstacleGrid,m-1,n-1,&memo);
    }
};
