97. Interleaving String

C++ Code
----------------------------------

class Solution {
public:
    bool check(string &s1, string &s2, string &s3, int i,int j, map<pair<int,int>,int>*memo)
    {
        if(i==0)
        {
            while(j>0)
            {
                if(s2[j-1]!=s3[i+j-1])
                    return false;
                j--;
            }
            return 1;
        }
        if(j==0)
        {
            while(i>0)
            {
                if(s1[i-1]!=s3[i+j-1])
                    return false;
                i--;
            }
            return 1;
        }        

        if(memo->find({i,j})!=memo->end())
            return (*memo)[{i,j}];
        int t1=0,t2=0;
        if(s1[i-1]!=s3[i+j-1] && s2[j-1]!=s3[i+j-1])
            return 0;
        if(s1[i-1]==s3[i+j-1])
            t1= check(s1,s2,s3,i-1,j,memo);
        if(s2[j-1]==s3[i+j-1])
            t2= check(s1,s2,s3,i,j-1,memo);
        (*memo)[{i,j}]=t1||t2;
        return (*memo)[{i,j}];
        
        
    }
    bool isInterleave(string s1, string s2, string s3) {
        int l1=s1.length(),l2=s2.length(),l3=s3.length();
        if(l1+l2!=l3)
            return 0;
        int i,j;
        map<pair<int,int>,int> memo;
        return check(s1,s2,s3,l1,l2,&memo);
    }
};
