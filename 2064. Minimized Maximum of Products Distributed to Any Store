2064. Minimized Maximum of Products Distributed to Any Store


C++ Code
----------------------------------
class Solution {
public:
    int getStores(vector<int>&quant, int mid)
    {
        int count=0, i,m=quant.size();
        for(i=0;i<m;i++)
        {
            count +=ceil((double)quant[i]/(double)mid);
        }
        return count;
    }
    int minimizedMaximum(int n, vector<int>& quantities) 
    {
        int low=1,high=0,i,m=quantities.size(),mid,res=0;
        for(i=0;i<m;i++)
        {
            high = max(high,quantities[i]);
        }
        
        while(low<=high)
        {
            mid = low+(high-low)/2;
            if(getStores(quantities,mid)<=n)
            {
                high=mid-1;
                res=mid;
            }
            else
            {
                low = mid+1;
            }
        }
        return res;
    }
};
